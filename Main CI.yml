# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: DotNetCoreCLI@2
  displayName: 'Restore'
  inputs:
    command: restore
    projects: '**/*.csproj'
    includeNuGetOrg: true

- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: build
    projects: '**/SKSGroupF.SKS.Package.Services.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build Tests'
  inputs:
    command: build
    projects: '**/*Test*/*.csproj'

- task: NodeTool@0
  inputs:
    versionSpec: '16.13.1'
  displayName: 'Install Node.js'

- script: |
    cd '$(System.DefaultWorkingDirectory)/src/Services/ParcelWebsite'
    npm install -g @angular/cli
    npm install
    ng build --prod
  displayName: 'npm install and build'
  
- task: ArchiveFiles@2
  displayName: 'Archive files'
  inputs:
   rootFolderOrFile: '$(System.DefaultWorkingDirectory)/src/Services/ParcelWebsite/dist/parcel-website/'
   includeRootFolder: false
   archiveType: zip
   archiveFile: $(Build.ArtifactStagingDirectory)/ParcelWebsite.zip
   replaceExistingArchive: true

- task: DotNetCoreCLI@2
  displayName: 'Run Unit Tests'
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    publishTestResults: true
    arguments: '--configuration $(buildConfiguration) --collect:"XPlat Code Coverage"'

- task: DotNetCoreCLI@2
  displayName: 'Publish Tests'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/*Test/*.csproj'
    arguments: '--output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: false

- task: DotNetCoreCLI@2
  displayName: 'Publish'
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

- task: reportgenerator@4
  displayName: "Merge code coverage reports"
  inputs:
    reports: "$(Agent.TempDirectory)/**/coverage.cobertura.xml"
    targetdir: "$(Build.ArtifactStagingDirectory)/coverlet"
    reporttypes: "Cobertura"
    verbosity: "Verbose"

- task: PublishCodeCoverageResults@1
  displayName: "Publish code coverage results"
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: "$(Build.ArtifactStagingDirectory)/coverlet/Cobertura.xml"

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'